- name: vpc playbook
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Get the variable
      include_vars: vars/vpc

    - name: creating vpc
      ec2_vpc_net: 
        name: "{{vpc_name}}"
        cidr_block: "{{vpc_cidr_block}}"
        region: "{{Region}}"
        dns_hostnames: true
        dns_support: true 
        tenancy: default
        state: present 
      register: vpcout

    - name: creating public subnet1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{Region}}"
        az: "{{Zone1}}"
        state: present
        cidr: "{{public_subnet_cidr_block1}}"
        map_public: true
        tags:
          Name: public-subnet1
      register: pubsub1out

    - name: creating public subnet2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{Region}}"
        az: "{{Zone2}}"
        state: present
        cidr: "{{public_subnet_cidr_block2}}"
        map_public: true
        tags:
          Name: public-subnet2
      register: pubsub2out

    - name: creating public subnet3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{Region}}"
        az: "{{Zone3}}"
        state: present
        cidr: "{{public_subnet_cidr_block3}}"
        map_public: true
        tags:
          Name: public-subnet3
      register: pubsub3out

    - name: creating private subnet1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{Region}}"
        az: "{{Zone1}}"
        state: present
        cidr: "{{private_subnet_cidr_block1}}"
        tags:
          Name: private-subnet1
      register: privsub1out

    - name: creating private subnet2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{Region}}"
        az: "{{Zone2}}"
        state: present
        cidr: "{{private_subnet_cidr_block2}}"
        tags:
          Name: private-subnet2
      register: privsub2out

    - name: creating private subnet3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{Region}}"
        az: "{{Zone3}}"
        state: present
        cidr: "{{private_subnet_cidr_block3}}"
        tags:
          Name: private-subnet3
      register: privsub3out

    - name: creating internet gateway
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        state: present
        region: "{{Region}}"
        tags:
          Name: ansible internet gateway
      register: igwout

    - name: creating the routetable for public subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{Region}}"
        state: present
        tags:
          Name: Pub routetable
        subnets:
          - "{{pubsub1out.subnet.id}}"
          - "{{pubsub2out.subnet.id}}"
          - "{{pubsub3out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igwout.gateway_id}}"
      register: pubrtout
    
    - debug:
        var: "{{item}}"
      loop:
        - vpcout.vpc.id
        - pubsub1out.subnet.id
        - pubsub2out.subnet.id
        - pubsub3out.subnet.id
        - pubrtout.route_table.id
        - igwout.gateway_id

    - set_fact:
        vpc_id: "{{vpcout.vpc.id}}"
        pubsub1: "{{pubsub1out.subnet.id}}"
        pubsub2: "{{pubsub2out.subnet.id}}"
        pubsub3: "{{pubsub3out.subnet.id}}"
        gateway_id: "{{igwout.gateway_id}}"
        pubrtout: "{{pubrtout.route_table.id}}"
        cacheable: yes

    - name: store all the variable using copy module
      copy:
        content: |
          vpc_id: "{{ vpc_id }}"
          pubsub1: "{{ pubsub1 }}"
          pubsub2: "{{ pubsub2 }}"
          pubsub3: "{{ pubsub3 }}"
          gateway_id: "{{ gateway_id }}"
          pubrtout: "{{ pubrtout }}"
        dest: vars/output_vars
  
